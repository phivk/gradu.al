import { readFile } from "fs/promises";
import { createClient } from "@supabase/supabase-js";

async function getEnvVariables() {
  try {
    const env = await (await readFile(".env")).toString();

    let SUPABASE_KEY, SUPABASE_URL, COMMUNITY_NAME;

    env.split("\n").forEach((value) => {
      const line = value.split("=");
      switch (line[0]) {
        case "SUPABASE_KEY":
          SUPABASE_KEY = line[1];
          break;
        case "SUPABASE_URL":
          SUPABASE_URL = line[1];
          break;
        case "COMMUNITY_NAME":
          COMMUNITY_NAME = line[1];
          break;
        default:
          break;
      }
    });

    if (!SUPABASE_KEY || !SUPABASE_URL || !COMMUNITY_NAME) {
      throw new Error();
    }
    return { SUPABASE_KEY, SUPABASE_URL, COMMUNITY_NAME };
  } catch (error) {
    console.log(error);
    console.log("There was a problem loading the environment variables.");
    console.log(
      "Ensure that there is a .env file and the correct keys are defined."
    );
    console.log(
      "There should be SUPABASE_KEY, SUPABASE_URL and COMMUNITY_NAME."
    );
    process.exit(1);
  }
}

async function run() {
  try {
    const { SUPABASE_KEY, SUPABASE_URL, COMMUNITY_NAME } =
      await getEnvVariables();
    const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);
    const { data, error } = await supabase.rpc("create_tables", {
      community: COMMUNITY_NAME,
    });
    console.log(data, error);
  } catch (error) {
    console.log(error);
  }
  await getEnvVariables();
}

run();

// At the moment, it doesn't seem to be possible to create the tables from the
// CLI. I've left this script as a scaffold for future work.
//
// Note: for now, to create a database there is a saved query called
// Manually Create Tables that requires a community rename in three places.

// Below, is a copy of that query for future reference.

// create table gradual_members (
//   id bigint generated by default as identity primary key,
//   created_at  timestamptz,
//   username varchar,
//   email varchar,
//   comment varchar
// );

// create table gradual_members_topics (
//   id bigint generated by default as identity primary key,
//   created_at timestamptz,
//   learner int8,
//   topic int8,
//   sharer int8
// );

// create table gradual_topics (
//   id bigint generated by default as identity primary key,
//   created_at timestamptz,
//   name varchar
// );
